<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://makexyz.fun//tag/arduino/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://makexyz.fun//" rel="alternate" type="text/html" />
  <updated>2020-06-01T08:18:32+00:00</updated>
  <id>https://makexyz.fun//tag/arduino/feed.xml</id>

  
  
  

  
    <title type="html">MakeXYZ | </title>
  

  
    <subtitle>Make anything fun</subtitle>
  

  

  
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Board nào tốt hơn - Raspberry hay Arduino</title>
      <link href="https://makexyz.fun//board-nao-tot-hon-arduino-hay-raspberry" rel="alternate" type="text/html" title="Board nào tốt hơn - Raspberry hay Arduino" />
      <published>2020-05-29T10:00:00+00:00</published>
      <updated>2020-05-29T10:00:00+00:00</updated>
      <id>https://makexyz.fun//board-nao-tot-hon-arduino-hay-raspberry</id>
      <content type="html" xml:base="https://makexyz.fun//board-nao-tot-hon-arduino-hay-raspberry">&lt;blockquote&gt;
  &lt;p&gt;Bạn đang phân vân không biết chọn board mạch điều khiển nào cho dự án tự động của bạn thì đây là bài viết bạn nên đọc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Có rất nhiều mạch điện tử điều khiển mà bạn có thể dùng trong những dự án tự động / thông minh. Hai đại diện tiêu biểu được nhiều người biết đến là board Arduino và board Raspberry. Vậy mình nên chọn board mạch nào cho dự án của mình thì hợp lý nhất vì nhìn sơ bên ngoài thì 2 board mạch này có kích thước khá tương đồng, chúng có các cổng kết nối và có chip điều khiển lập trình được. Sau bài viết này bạn sẽ nắm được sự khác biệt cơ bản giữa Arduino và Raspberry Pi và từ đó chọn đúng board điều khiển cho dự án của mình.&lt;/p&gt;

&lt;h2 id=&quot;arduino-uno-xây-dựng-trên-một-vi-điều-khiển&quot;&gt;Arduino (Uno) xây dựng trên một Vi Điều Khiển&lt;/h2&gt;

&lt;p&gt;Mình sẽ bắt đầu với board Arduino Uno, đây là một đại diện tiêu biểu của dòng board Arduino. Arduino Uno được xây dựng dựa trên vi điều khiển ATmega 328P. Trong con vi điều khiển này là 2Kb RAM, 32Kb bộ nhớ FLASH, một vài bộ định thời (giống như kiểu đồng hồ báo thức) và phần cứng phục vụ giao tiếp giữa nó và các thiết bị bên ngoài khác như Serial, I2C, SPI. Trên board mạch, bên ngoài con chip là các bộ chia áp, linh kiện điện tử như điện trở, tụ điện,… và các cổng giao tiếp. Chương trình mà bạn viết trên Arduino IDE sẽ được biên dịch và lưu trên bộ nhớ của vi điều khiển ATmega 328P. Arduino Uno (hay ATmega 328P) không có firmware hay hệ điều hành nào gắn với nó cả, chỉ có chương trình bạn nạp.&lt;/p&gt;

&lt;h2 id=&quot;raspberry-pi-xây-dựng-trên-một-vi-xử-lý&quot;&gt;Raspberry Pi xây dựng trên một Vi Xử Lý&lt;/h2&gt;

&lt;p&gt;Trong khi đó, Raspberry Pi là một kiểu máy tính thu nhỏ (Single Board Computer) có đủ CPU (chip vi xử lý), ~2Gb bộ nhớ RAM, cổng kết nối HDMI, Audio, USB Host, Ethernet, thẻ SD như máy tính bình thường. Raspberry Pi được xây dựng dựa trên vi xử lý ARM đa lõi với tốc độ xử lý lên đến 1.4GHz và hơn thế trong khí 328P chỉ có tốc độ xử lý chỉ đến 20MHz. Đến đây thì chắc các bạn cũng thấy sự khác biệt lớn. Raspberry Pi cũng có các chân kết nối thiết bị điện tử bên ngoài như Arduino. Tuy nhiên, các chân này do hệ điều hành chạy trên Raspberry điều khiển trực tiếp, chương trình của bạn trên Raspberry chỉ nói cho hệ điều hành thông tin để điều khiển chứ không trực tiếp điều khiển như trên Arduino.&lt;/p&gt;

&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/7vhvnaWUZjE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;vi-điều-khiển-và-vi-xử-lý-thì-khác-gì-nhau&quot;&gt;Vi điều khiển và vi xử lý thì khác gì nhau&lt;/h2&gt;

&lt;p&gt;Vi xử lý và vi điều khiển đều có khả năng tính toán và xử lý tuy nhiên vi xử lý có tốc độ xử lý cao hơn vi điều khiển rất nhiều (GHz vs MHz). Nói cách khác thì Raspberry Pi có não to hơn Arduino Uno, tính toán và xử lý nhanh hơn rất nhiều (&amp;gt;40 lần). Không chỉ nhanh hơn, Raspberry còn có bộ nhớ RAM lớn hơn Arduino rất nhiều (2Gb hay 2048Mb vs 2Mb). Với RAM nhiều hơn, Raspberry có thể xử lý các file dung lượng lớn vì có đủ chỗ chứa tạm. =&amp;gt; &lt;em&gt;&lt;strong&gt;Raspberry WIN&lt;/strong&gt;&lt;/em&gt;
Vi xử lý và vi điều khiển đều có các chân kết nối ngoại vi (IO pin) nhưng điện áp trên IO pin của vi xử lý thường ở mức 3.3V (điện áp thấp) khiến nó khó điều khiển trực tiếp các thiết bị khác so với vi điều khiển, có mức điện áp IO pin là 5V. Vẫn chưa hết nhé, dòng điện tối đa trên các IO pin cũng chênh lệnh lớn: Ở Arduino là max 40mA, ở Raspberry chỉ khoảng 5mA. =&amp;gt; &lt;em&gt;&lt;strong&gt;Arduino WIN&lt;/strong&gt;&lt;/em&gt;
Xét về giá thì một board Arduino Uno chỉ khoảng 120.000VND rẻ hơn nhiều một board Raspberry Pi - giá khoảng 650.000VND =&amp;gt; &lt;em&gt;&lt;strong&gt;Arduino WIN&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;khi-nào-thì-dùng-board-gì-&quot;&gt;Khi nào thì dùng board gì ^^!&lt;/h2&gt;

&lt;p&gt;Câu trả lời dựa trên tính chất đặc thù của dự án, chi phí cho dự án, tính phức tạp và việc mở rộng các chức năng của dự án.&lt;/p&gt;

&lt;p&gt;Mình lấy ví dụ như sau: Nếu bạn chỉ cần điều khiển vài thiết bị điện tử một cách tự động thì dùng Arduino Uno hoặc các dòng tương tự là đủ và thậm chí là dư sức chơi rồi. Dự án của bạn lớn dần lên khi bạn muốn điều khiển các thiết bị điện tử trước đó qua mạng Wifi, bạn cũng chỉ cần lắp thêm module giao tiếp Wifi chứ chưa cần đổi board điều khiển Arduino. Dự án của bạn lớn thếm nữa, đòi hỏi phải lưu lại dữ liệu thu về từ 1 trong các thiết bị này để thống kê, bạn cũng vẫn không cần đổi board điều khiển mà chỉ cần lắp thêm module thẻ nhớ để lưu dữ liệu lên thẻ. Nhưng rồi bạn muốn làm 1 server điều khiển, có thể kết nối được từ điện thoại di động và bạn có thể điều khiển / đọc dữ liệu các thiết bị kia qua giao diện Web được server cung cấp thì chắc là bạn cần mua thêm board Raspberry để sử dụng cùng với Arduino rồi đó. Hoặc bạn cần kích hoạt đèn trong nhà chẳng hạn qua hình ảnh thu về từ camera (khi có người trong phòng) thì chắc 100% là bạn cần Raspberry Pi vì Arduino Uno không đủ bộ nhớ RAM để hỗ trợ xử lý hình ảnh.&lt;/p&gt;

&lt;p&gt;Tóm lại, khi bạn chỉ làm dự án thuần về điều khiển thông thường, không dính đến xử lý ảnh, trí thông minh nhân tạo, hiển thị ảnh màu tốc độ cao… thì Arduino là đủ rồi. Và thường thì Raspberry chỉ xuất hiện khi bạn phát hiện ra trong dự án của mình có phần nào đó cần khả năng xử lý vượt qua khả năng xử lý của Arduino hay yêu cầu RAM lớn thôi.&lt;/p&gt;

&lt;p&gt;Mình hy vọng sau bài viết này thì bạn cũng chọn được board mạch nào dùng cho dự án của mình nhé!&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Credit: Bài viết có sử dụng thông tin trong clip [Arduino vs. Raspberry Pi - Which is best?&lt;/td&gt;
      &lt;td&gt;AddOhms #7](https://www.youtube.com/watch?v=7vhvnaWUZjE&amp;amp;fbclid=IwAR1GS1iK53Q284I0U-6qoDxxey8u_h2Z0xoGs0nZrkeTXXDy46S28VdL550)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content>

      
      
      
      
      

      <author>
          <name>Tony Pham</name>
        
        
      </author>

      

      
        <category term="arduino" />
      

      
        <summary type="html">Bạn đang phân vân không biết chọn board mạch điều khiển nào cho dự án tự động của bạn thì đây là bài viết bạn nên đọc.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Xung giữa các thư viện Arduino</title>
      <link href="https://makexyz.fun//xung-dot-thu-vien-arduino" rel="alternate" type="text/html" title="Xung giữa các thư viện Arduino" />
      <published>2020-05-28T10:00:00+00:00</published>
      <updated>2020-05-28T10:00:00+00:00</updated>
      <id>https://makexyz.fun//xung-dot-thu-vien-arduino</id>
      <content type="html" xml:base="https://makexyz.fun//xung-dot-thu-vien-arduino">&lt;blockquote&gt;
  &lt;p&gt;Khi bạn đặt tất cả các đoạn code lại với nhau theo logic nhưng chương trình Arduino không chạy .. vì xung đột thư viện thì bài viết này bạn nên đọc!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;không-sử-dụng-thư-viện-thì-khỏi-xung-đột-&quot;&gt;Không sử dụng thư viện thì khỏi xung đột ?&lt;/h2&gt;

&lt;p&gt;Đúng là không xài thư viện thì sẽ né được nguy cơ này khá cao! Nhưng ai đã và đang tìm hiểu Arduino đều ý thức được rằng thứ đáng giá nhất ở Arduino chính là bộ thư viện giao tiếp phần cứng đồ sộ của nó, được xây dựng và đóng góp cộng đồng Arduino trên toàn thế giới. Mình thề rằng trong rất nhiều trường hợp những thư viện này rút gọn thời gian tìm hiểu và viết code cho ứng dụng điều khiển tự động từ cả tháng xuống chỉ còn một vài ngày. Ah, cả tháng đó là đối với dân bán chuyên hoặc chuyên lập trình thôi, còn dân không chuyên lập trình thì quên luôn đi :)&lt;/p&gt;

&lt;h2 id=&quot;lý-do-có-sự-xung-đột-giữa-các-thư-viện&quot;&gt;Lý do có sự xung đột giữa các thư viện&lt;/h2&gt;

&lt;p&gt;Nói nhảm xíu, các bạn có biết cuộc chiến Android vs iOS không? Android nổi tiếng ở mã nguồn mở, tính tùy biến cao nhưng tới giờ cũng chưa nuốt nổi iOS. Lý do sao vậy? iOS có tính ổn định và tính hệ thống tốt hơn Android. Nó được phát triển bởi 1 nhà sản xuất duy nhất nên iOS trên Iphone nào cũng giống nhau nếu như cùng đời. Sẽ không có chuyện phần mềm trên máy này cài lên máy kia sẽ không chạy. Cũng không có chuyện cài phần mềm mới lên thì phần mềm cũ nào đó bị lỗi. Android mã nguồn mở, nhà sản xuất có quyền tùy chỉnh lõi kernel của nó nên chưa chắc phần mềm viết cho Android chạy trên điện thoại Samsung mà đưa lên điện thoại Android Sony thì chạy.&lt;/p&gt;

&lt;p&gt;Các thư viện của Arduino cũng vậy. Tạm thời xem nó như phần mềm trên chiếc điện thoại Arduino. Chiếc điện thoại này có cấu hình phần cứng cùi bắp, chỉ thích hợp chạy đơn nhiệm chứ không phải đa nhiệm. Bạn cài lên nó hơn 1 phần mềm (#include hơn 1 thư viện) thì khả năng xảy ra xung đột đã có rồi đấy, đơn giản vì các thư viện được lập trình bởi những người khác nhau và không chắc chúng có dùng khác nền tảng phần cứng của Arduino hay không (Timer, Interrupt, PWM,…). Giả sử 2 thư viện dùng cùng phần cứng là Interrupt Pin Change chẳng hạn thì khả năng chúng “CẮN” nhau là 100% rồi. Trong một số trường hợp khác, thư viện chỉ hỗ trợ Arduino Mega 2560 chẳng hạn nhưng bạn dùng nó trên Uno thì cũng thua rồi.&lt;/p&gt;

&lt;h2 id=&quot;những-lưu-ý-khi-sử-dụng-nhiều-hơn-1-thư-viện&quot;&gt;Những lưu ý khi sử dụng nhiều hơn 1 thư viện&lt;/h2&gt;

&lt;p&gt;Tất nhiên những trường hợp xung đột giữa các thư viện cũng không nhiều, và hầu như chỉ xảy ra khi dự án của bạn tương đối phức tạp xíu vì dùng nhiều thiết bị phần cứng khác nhau kết nối với Arduino, chứ không thì mọi người cũng nghỉ chơi với Arduino rồi. Mình nêu lên vấn đề này chủ yếu để các bạn không chuyên điện tử thì cũng nên để ý đến “note” có ghi trong thư viện, các nền phần cứng mà cái thư viện đó sử dụng, hay các chia sẻ cảnh báo xung đột thư viện từ cộng đồng. Vì nếu không, khi xảy ra lỗi, bạn có căng mắt tìm lỗi trong code mình viết thì cũng không ra đâu vì có thể nó ở thư viện. Rất nhiều trường hợp, các bạn copy code của nhau cho dự án robot không chạy được cũng do xung đột thư viện hoặc thư viện không hỗ trợ.&lt;/p&gt;

&lt;p&gt;✨✨✨ Mình xin nêu bên dưới đây 3 trường hợp xung đột hoặc không hỗ trợ mà mình biết. Bạn nào có kinh nghiệm xương máu khác thì Share luôn để các bạn khác biết để không đâm đầu vào những tình huóng cắn lưỡi nha :)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SoftwareSerial vs Servo&lt;/li&gt;
  &lt;li&gt;IRRemote vs Tone&lt;/li&gt;
  &lt;li&gt;Pinchange vs SoftwareSerial&lt;/li&gt;
  &lt;li&gt;Không phải mọi chân của Arduino Mega hỗ trợ chân RX khi khai báo SoftwareSerial. Chi tiết bạn thâm khảo thông tin trong thư viện này.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Chúc các bạn né được càng nhiều càng tốt!
P/s: kiều gì thì cũng dính thôi, kkkk…&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Tony Pham</name>
        
        
      </author>

      

      
        <category term="arduino" />
      

      
        <summary type="html">Khi bạn đặt tất cả các đoạn code lại với nhau theo logic nhưng chương trình Arduino không chạy .. vì xung đột thư viện thì bài viết này bạn nên đọc!</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">9g Micro RC Servo Robot Arm</title>
      <link href="https://makexyz.fun//9g-rc-servo-arduino-robot-arm" rel="alternate" type="text/html" title="9g Micro RC Servo Robot Arm" />
      <published>2020-05-27T21:00:00+00:00</published>
      <updated>2020-05-27T21:00:00+00:00</updated>
      <id>https://makexyz.fun//9g-rc-servo-arduino-robot-arm</id>
      <content type="html" xml:base="https://makexyz.fun//9g-rc-servo-arduino-robot-arm">&lt;p&gt;Today, I’ll share a really old project that I followed - A 9g Micro Servo Arduino Robot Arm.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/3SC-O6A-700&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;This project was born around October 2016. At the time, it was not created by an original idea, it was actually a combination of the idea of ​​hardware and software from two different projects that I credit below. However, this product was redesigned in terms of structure, circuit, and program to be more complete than the previous two products. With the frame designed and printed in 3D to optimize the installation of 9g RC Servo motors as well as firmer, the electrical part was designed into Shield that could be installed on existing Arduino Uno, the program was also been modified to retain only those components that are truly necessary and optimized for control speed.&lt;/p&gt;

&lt;p&gt;As a result, you have a robot arm that can be taught by manipulating resistors on the shield for each position of the joints. Each time you teach a robot a new location, you will save the location data (actually the value from the potentiometer) into the Arduino in chronological order. After teaching the robot all the moves, you can switch to Play mode so that the robot repeats all operations in order and always on the time between location changes. The best thing about this project is the Arduino code that was inherited from Pinaut’s project. If you pay close attention, you will see all the Micro RC Servo reaching the destination at the same time even though the angle is different. This makes the smoothness of this robot model and Pinaut’s robot model that few other RC Servo models have.&lt;/p&gt;

&lt;p&gt;Thanks for reading,
If you like my videos, please like and subscribe to &lt;a href=&quot;https://www.youtube.com/channel/UC4v28AauStqzl2rwNGl9QcA&quot;&gt;my channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Credits:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bLnAJ-mSElE&quot;&gt;Micro Servo Robot - Pinaut&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kickstarter.com/projects/slantrobotics/littlearm-v3-mini-arduino-robot-arm-for-stem-and-hobby&quot;&gt;LittleArm - V1&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>Tony Pham</name>
        
        
      </author>

      

      
        <category term="arduino" />
      

      
        <summary type="html">Today, I’ll share a really old project that I followed - A 9g Micro Servo Arduino Robot Arm.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Arduino là cái gì?</title>
      <link href="https://makexyz.fun//arduino-la-gi" rel="alternate" type="text/html" title="Arduino là cái gì?" />
      <published>2018-02-18T15:20:00+00:00</published>
      <updated>2018-02-18T15:20:00+00:00</updated>
      <id>https://makexyz.fun//arduino-la-gi</id>
      <content type="html" xml:base="https://makexyz.fun//arduino-la-gi">&lt;p&gt;Chắc chắn hồi còn bé xíu, bạn, mình và rất rất nhiều người khác nữa đều thích chơi lắp ráp. Từ những miếng gỗ, hoặc từ những mảnh Lego nhỏ, mình có thể xếp thành bất kì mô hình nào mà mình thấy thích thú. Mình nhớ hồi còn học tiểu học, Lego có về trường mình và tổ chức một cuộc thi lắp ráp nho nhỏ. Tất cả học sinh ngồi chung với nhau, các mảnh Lego được đổ tràn ra và mọi người có quyền chọn lựa bất kì mảnh ghép nào để ráp thành ý tưởng của mình. Và, rất rất nhiều ý tưởng thú vị, cách sắp xếp thú vị được tạo ra từ những mảnh vuông cơ bản ấy: lâu đài, máy bay, tàu, xe tăng, …và rất rất nhiều mô hình tuyệt đẹp khác nữa.&lt;/p&gt;

&lt;h2 id=&quot;stop-stop-sao-dài-dòng-vậy-rốt-cục-arduino-là-cái-quái-gì&quot;&gt;STOP! STOP! Sao dài dòng vậy, rốt cục Arduino là cái quái gì?&lt;/h2&gt;

&lt;p&gt;Ah, Arduino chẳng phải là sản phẩm gì của Lego đâu! Mình lấy Lego làm ví dụ để các bạn dễ hình dung hơn những gì mình muốn nói thôi. Tất cả mô hình Lego lúc đó đều là mô hình tĩnh, tức là xe chẳng thể tự chạy, chẳng thể nhấp nháy đèn, máy bay chẳng thể bay được, vịt con chẳng thể bơi,… Bạn tưởng tượng thế này, nếu có 1 mảnh ghép nào đấy khi lắp vào khiến xe có thể chạy, máy bay có thể bay và vịt con có thể bơi,… chẳng phải quá tuyệt vời sao? Tất nhiên mảnh ghép tuyệt vời đó, tự bản thân nó đã là một thứ cực kì phức tạp rồi, và chẳng phải ai cũng có thể tự tạo ra nó được.&lt;/p&gt;

&lt;h2 id=&quot;rốt-cục-thì-có-thứ-mảnh-ghép-tuyệt-với-đó-không&quot;&gt;Rốt cục thì có thứ mảnh ghép tuyệt với đó không?&lt;/h2&gt;

&lt;p&gt;Ah, trước thì không nhưng giờ thì đã có!&lt;/p&gt;

&lt;p&gt;Trước đây, loại mảnh ghép đó chỉ có chuyên gia điện tử điều khiển mới có thể làm được và rất rất ư là tốn thời gian. Thêm vào đó, mảnh ghép của chuyên gia này có thể sẽ không thể ghép vào mô hình của chuyên gia khác. Nhưng bây giờ, tất cả mọi người, kể cả con nít cũng có thể có được thứ mảnh ghép đó với chi phí cực kì hợp lý. Và hay hơn nữa, bạn có thể lấy mảnh ghép của bộ này ráp qua bộ khác như Lego vậy.&lt;/p&gt;

&lt;p&gt;Trong thế giới sáng tạo, giống như chơi Lego, bạn sẽ cần những nền tảng có sẵn được xây dựng bởi người khác, bởi cộng đồng để xây dựng nên những thứ khác tuyệt vời hơn, vỹ đại hơn. Bạn cần đứng trên vai của người khổng lồ để có tầm nhìn xa hơn, và tạo ra những thứ tốt hơn nữa!&lt;/p&gt;

&lt;p&gt;Và mình cá là con nít sẽ chẳng muốn chơi lắp ráp đâu nếu chúng phải học qua tất cả mọi thứ như nhựa là gì? đặc tính của nhựa là gì? gia công chế tạo khuôn ép nhựa? kỹ thuật ép phun?… chỉ để làm ra 1 mảnh Lego ^^!&lt;/p&gt;

&lt;h2 id=&quot;vẫn-chưa-thấy-arduino-đâu-cả-&quot;&gt;Vẫn chưa thấy Arduino đâu cả !!!&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Arduino chính là mảnh ghép còn thiếu mà mình nói. Với nó, bạn có thể tạo nên cả tỷ thứ hữu ích trong cuộc sống này. Arduino là bộ não điều khiển của cả một tuyệt tác.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/vx2B8VV/arduino-uno-r3.jpg&quot; alt=&quot;arduino-uno-r3&quot; title=&quot;Arduino Uno R3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mình trích dẫn một phần giải thích về Arduino mà mình thấy thích từ diễn đàn Arduino.vn:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Arduino là một nền tảng mà mọi thiết bị phần cứng đều được làm sẵn và chuẩn hóa, người dùng chỉ việc chọn những thứ mình cần, ráp lại là có thể chạy được. Bạn muốn làm xe điều khiển từ xa ? Arduino cung cấp cho bạn module điều khiển động cơ có sẵn, mạch điều khiển có sẵn, mạch thu phát sóng không dây có sẵn,… Bạn sẽ không cần phải động não thiết kế mạch điện cho chiếc xe bởi đơn giản là mọi thứ đều có sẵn.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Giống như một con người với “thể xác” đã được xây dựng sẵn, một hệ thống Arduino phải có “tâm hồn” để có thể “sống”. Và tôi gọi việc tạo ra “tâm hồn” ấy là “Lập trình”. Tuy nhiên bạn sẽ không phải lập trình từ A đến Z. Mỗi thứ phần cứng gắn mác “Arduino” đều có những đoạn lệnh đã được viết sẵn (gọi là thư viện) do cộng đồng người dùng Arduino cùng phát triển. Bạn chỉ việc bưng vào và xào nấu lại theo ý muốn của mình. Tới đây, bạn đã giải quyết được vấn đề thứ 2. Đừng lo nếu bạn không biết gì về lập trình bởi chúng chỉ giống như những bài tập Tin học lớp 11 lặt vặt ở trường thôi.
Arduino.vn nói là tận lớp 11, còn mình thì nghĩ là Arduino dễ đến mức nếu được hướng dẫn, học sinh lớp 5 cũng có thể làm dự án bật tắt đèn thông minh trong nhà qua điện thoại trong … 1 ngày!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Tony Pham</name>
        
        
      </author>

      

      
        <category term="arduino" />
      

      
        <summary type="html">Chắc chắn hồi còn bé xíu, bạn, mình và rất rất nhiều người khác nữa đều thích chơi lắp ráp. Từ những miếng gỗ, hoặc từ những mảnh Lego nhỏ, mình có thể xếp thành bất kì mô hình nào mà mình thấy thích thú. Mình nhớ hồi còn học tiểu học, Lego có về trường mình và tổ chức một cuộc thi lắp ráp nho nhỏ. Tất cả học sinh ngồi chung với nhau, các mảnh Lego được đổ tràn ra và mọi người có quyền chọn lựa bất kì mảnh ghép nào để ráp thành ý tưởng của mình. Và, rất rất nhiều ý tưởng thú vị, cách sắp xếp thú vị được tạo ra từ những mảnh vuông cơ bản ấy: lâu đài, máy bay, tàu, xe tăng, …và rất rất nhiều mô hình tuyệt đẹp khác nữa.</summary>
      

      
      
    </entry>
  
</feed>
